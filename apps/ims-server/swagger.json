{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserResponseType": {
				"properties": {
					"identifierType": {
						"type": "string",
						"enum": [
							"email",
							"phone"
						]
					},
					"identifier": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"identifierType",
					"identifier",
					"name",
					"id"
				],
				"type": "object"
			},
			"RefreshTokenInput": {
				"properties": {
					"refreshToken": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"_36_Enums.OtpType": {
				"type": "string",
				"enum": [
					"SIGN_UP",
					"LOGIN",
					"FORGET_PASSWORD"
				]
			},
			"OtpType": {
				"$ref": "#/components/schemas/_36_Enums.OtpType"
			},
			"AuthTokensResponseType": {
				"properties": {
					"refreshToken": {
						"type": "string"
					},
					"accessToken": {
						"type": "string"
					}
				},
				"required": [
					"refreshToken",
					"accessToken"
				],
				"type": "object"
			},
			"AuthResponseType": {
				"properties": {
					"tokens": {
						"$ref": "#/components/schemas/AuthTokensResponseType"
					},
					"user": {
						"$ref": "#/components/schemas/UserResponseType"
					}
				},
				"required": [
					"tokens",
					"user"
				],
				"type": "object"
			},
			"LocalLoginInput": {
				"properties": {
					"password": {
						"type": "string"
					},
					"identifier": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"identifier"
				],
				"type": "object"
			},
			"OtpSignUpInput": {
				"properties": {
					"name": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"password"
				],
				"type": "object"
			},
			"ResetForgettenPasswordInput": {
				"properties": {
					"confirmNewPassword": {
						"type": "string"
					},
					"newPassword": {
						"type": "string"
					}
				},
				"required": [
					"confirmNewPassword",
					"newPassword"
				],
				"type": "object"
			},
			"Pick_RoleCreateInput.Exclude_keyofRoleCreateInput.createdById__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"organizationId": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"organizationId"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_RoleCreateInput.createdById_": {
				"$ref": "#/components/schemas/Pick_RoleCreateInput.Exclude_keyofRoleCreateInput.createdById__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"RolePermissionCreateManyInput": {
				"items": {
					"properties": {
						"permissionId": {
							"type": "string"
						},
						"roleId": {
							"type": "string"
						}
					},
					"required": [
						"permissionId",
						"roleId"
					],
					"type": "object"
				},
				"type": "array",
				"description": "Represents multiple role-permission associations."
			},
			"RoleCreateBody": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Omit_RoleCreateInput.createdById_"
					},
					{
						"properties": {
							"permissions": {
								"$ref": "#/components/schemas/RolePermissionCreateManyInput"
							}
						},
						"required": [
							"permissions"
						],
						"type": "object"
					}
				],
				"description": "API request body type — sent to backend.\nIncludes permissions array."
			},
			"RoleUpdateInput": {
				"$ref": "#/components/schemas/Omit_RoleCreateInput.createdById_",
				"description": "Base input type for updating a role.\nSimilar to creation, but excludes createdById."
			},
			"RoleUpdateBody": {
				"allOf": [
					{
						"$ref": "#/components/schemas/RoleUpdateInput"
					},
					{
						"properties": {
							"permissions": {
								"$ref": "#/components/schemas/RolePermissionCreateManyInput"
							}
						},
						"required": [
							"permissions"
						],
						"type": "object"
					}
				],
				"description": "API request body type — sent to backend during updates.\nIncludes permissions array."
			},
			"_36_Enums.ActionName": {
				"type": "string",
				"enum": [
					"CREATE",
					"READ",
					"UPDATE",
					"DELETE",
					"APPROVE",
					"REJECT",
					"EXPORT",
					"IMPORT",
					"SHARE",
					"ARCHIVE",
					"RESTORE"
				]
			},
			"_36_Enums.ResourceName": {
				"type": "string",
				"enum": [
					"USER",
					"ROLE",
					"ITEM",
					"INVOICE",
					"CUSTOMER",
					"SUPPLIER",
					"PURCHASE_ORDER",
					"SALES_ORDER",
					"WAREHOUSE",
					"ORGANIZATION",
					"REPORT"
				]
			},
			"Pick_OrganizationModel.Exclude_keyofOrganizationModel.id-or-createdAt-or-updatedAt-or-ownerId__": {
				"properties": {
					"name": {
						"type": "string",
						"description": "The name of the organization.",
						"minLength": 2,
						"maxLength": 50
					},
					"description": {
						"type": "string",
						"description": "The name of the organization.",
						"minLength": 2,
						"maxLength": 250
					},
					"stateId": {
						"type": "string"
					},
					"currencyId": {
						"type": "string"
					},
					"timeZoneId": {
						"type": "string"
					},
					"inventoryStartDate": {
						"type": "string",
						"format": "date-time"
					},
					"languageId": {
						"type": "string"
					},
					"industryCategoryId": {
						"type": "string"
					},
					"fiscalYearPatternId": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"zipCode": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"stateId",
					"currencyId",
					"timeZoneId",
					"inventoryStartDate"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_OrganizationModel.id-or-createdAt-or-updatedAt-or-ownerId_": {
				"$ref": "#/components/schemas/Pick_OrganizationModel.Exclude_keyofOrganizationModel.id-or-createdAt-or-updatedAt-or-ownerId__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"OrganizationCreateBody": {
				"$ref": "#/components/schemas/Omit_OrganizationModel.id-or-createdAt-or-updatedAt-or-ownerId_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@khaled/ims-server",
		"version": "1.3.0",
		"contact": {}
	},
	"paths": {
		"/user": {
			"get": {
				"operationId": "GetProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseType"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": []
			}
		},
		"/oauth/google": {
			"get": {
				"operationId": "GoogleLogin",
				"responses": {
					"302": {
						"description": "Redirect"
					}
				},
				"tags": [
					"oauth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/oauth/facebook": {
			"get": {
				"operationId": "FacebookLogin",
				"responses": {
					"302": {
						"description": "Redirect"
					}
				},
				"tags": [
					"oauth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/token/refresh": {
			"post": {
				"operationId": "RefreshToken",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"accessToken": {
											"type": "string"
										}
									},
									"required": [
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"token"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RefreshTokenInput"
							}
						}
					}
				}
			}
		},
		"/otp/request": {
			"post": {
				"operationId": "RequestOtp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {
											"type": "string"
										}
									},
									"required": [
										"token"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"otp"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"otpType": {
										"$ref": "#/components/schemas/OtpType"
									},
									"identifier": {
										"type": "string"
									}
								},
								"required": [
									"otpType",
									"identifier"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/otp/verify": {
			"post": {
				"operationId": "VerifyOtp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {
											"type": "string"
										}
									},
									"required": [
										"token"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"otp"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"otpType": {
										"$ref": "#/components/schemas/OtpType"
									},
									"otp": {
										"type": "string"
									}
								},
								"required": [
									"otpType",
									"otp"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseType"
								}
							}
						}
					}
				},
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LocalLoginInput"
							}
						}
					}
				}
			}
		},
		"/auth/sign-up": {
			"post": {
				"operationId": "SignUp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponseType"
								}
							}
						}
					}
				},
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OtpSignUpInput"
							}
						}
					}
				}
			}
		},
		"/auth/forget-password": {
			"post": {
				"operationId": "ResetForgettenPassword",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ResetForgettenPasswordInput"
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"refreshToken": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/role": {
			"post": {
				"operationId": "CreateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"type": "string"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"name",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"role"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoleCreateBody"
							}
						}
					}
				}
			}
		},
		"/role/{id}": {
			"put": {
				"operationId": "UpdateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"priority": {
											"type": "number",
											"format": "double"
										},
										"isSystem": {
											"type": "boolean"
										},
										"createdById": {
											"type": "string"
										},
										"organizationId": {
											"type": "string"
										},
										"description": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"expiresAt": {
											"type": "string",
											"format": "date-time"
										},
										"updatedAt": {
											"type": "string",
											"format": "date-time"
										},
										"createdAt": {
											"type": "string",
											"format": "date-time"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"priority",
										"isSystem",
										"createdById",
										"organizationId",
										"description",
										"name",
										"expiresAt",
										"updatedAt",
										"createdAt",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"role"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoleUpdateBody"
							}
						}
					}
				}
			}
		},
		"/permissions/headers": {
			"get": {
				"operationId": "GetPermissionMatrix",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"permissions": {
											"items": {
												"properties": {
													"isDangerous": {
														"type": "boolean"
													},
													"category": {
														"type": "string"
													},
													"resourceId": {
														"type": "string"
													},
													"actionId": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"isDangerous",
													"category",
													"resourceId",
													"actionId",
													"description",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"resources": {
											"items": {
												"properties": {
													"description": {
														"type": "string"
													},
													"name": {
														"$ref": "#/components/schemas/_36_Enums.ResourceName"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"description",
													"name",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"actions": {
											"items": {
												"properties": {
													"description": {
														"type": "string"
													},
													"name": {
														"$ref": "#/components/schemas/_36_Enums.ActionName"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"description",
													"name",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"permissions",
										"resources",
										"actions"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"permissions"
				],
				"security": [],
				"parameters": []
			}
		},
		"/permissions/{roleId}": {
			"get": {
				"operationId": "GetRolePermissions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"permissionId": {
												"type": "string"
											},
											"id": {
												"type": "string"
											}
										},
										"required": [
											"permissionId",
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"permissions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/organization": {
			"post": {
				"operationId": "CreateOrgnization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"type": "string"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"name",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"organization"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/OrganizationCreateBody"
							}
						}
					}
				}
			}
		},
		"/organization/owner-organizations": {
			"get": {
				"operationId": "GetOwnedOrganizations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"zipCode": {
												"type": "string"
											},
											"address": {
												"type": "string"
											},
											"ownerId": {
												"type": "string"
											},
											"fiscalYearPatternId": {
												"type": "string"
											},
											"industryCategoryId": {
												"type": "string"
											},
											"languageId": {
												"type": "string"
											},
											"inventoryStartDate": {
												"type": "string",
												"format": "date-time"
											},
											"timeZoneId": {
												"type": "string"
											},
											"currencyId": {
												"type": "string"
											},
											"stateId": {
												"type": "string"
											},
											"description": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"updatedAt": {
												"type": "string",
												"format": "date-time"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"id": {
												"type": "string"
											}
										},
										"required": [
											"zipCode",
											"address",
											"ownerId",
											"fiscalYearPatternId",
											"industryCategoryId",
											"languageId",
											"inventoryStartDate",
											"timeZoneId",
											"currencyId",
											"stateId",
											"description",
											"name",
											"updatedAt",
											"createdAt",
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"organization"
				],
				"security": [],
				"parameters": []
			}
		},
		"/organization/user-organizations": {
			"get": {
				"operationId": "GetUserOrganizations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"zipCode": {
												"type": "string"
											},
											"address": {
												"type": "string"
											},
											"ownerId": {
												"type": "string"
											},
											"fiscalYearPatternId": {
												"type": "string"
											},
											"industryCategoryId": {
												"type": "string"
											},
											"languageId": {
												"type": "string"
											},
											"inventoryStartDate": {
												"type": "string",
												"format": "date-time"
											},
											"timeZoneId": {
												"type": "string"
											},
											"currencyId": {
												"type": "string"
											},
											"stateId": {
												"type": "string"
											},
											"description": {
												"type": "string"
											},
											"name": {
												"type": "string"
											},
											"updatedAt": {
												"type": "string",
												"format": "date-time"
											},
											"createdAt": {
												"type": "string",
												"format": "date-time"
											},
											"id": {
												"type": "string"
											}
										},
										"required": [
											"zipCode",
											"address",
											"ownerId",
											"fiscalYearPatternId",
											"industryCategoryId",
											"languageId",
											"inventoryStartDate",
											"timeZoneId",
											"currencyId",
											"stateId",
											"description",
											"name",
											"updatedAt",
											"createdAt",
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"organization"
				],
				"security": [],
				"parameters": []
			}
		},
		"/organization/form-data": {
			"get": {
				"operationId": "OrganizationFormData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"industryCategories": {
											"items": {
												"properties": {
													"label": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"label",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"currencies": {
											"items": {
												"properties": {
													"code": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													},
													"symbol": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"name",
													"id",
													"symbol"
												],
												"type": "object"
											},
											"type": "array"
										},
										"fiscalYearPattern": {
											"items": {
												"properties": {
													"label": {
														"type": "string"
													},
													"code": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"label",
													"code",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"timezones": {
											"items": {
												"properties": {
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"name",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"languages": {
											"items": {
												"properties": {
													"code": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"name",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"countries": {
											"items": {
												"properties": {
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													}
												},
												"required": [
													"name",
													"id"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"industryCategories",
										"currencies",
										"fiscalYearPattern",
										"timezones",
										"languages",
										"countries"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"organization"
				],
				"security": [],
				"parameters": []
			}
		},
		"/country": {
			"get": {
				"operationId": "GetCountries",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"name": {
												"type": "string"
											},
											"id": {
												"type": "string"
											}
										},
										"required": [
											"name",
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"region"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/country/{countryId}/states": {
			"get": {
				"operationId": "GetStates",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"country": {
												"properties": {
													"timezones": {
														"items": {
															"properties": {
																"offset": {
																	"type": "string"
																},
																"name": {
																	"type": "string"
																},
																"id": {
																	"type": "string"
																}
															},
															"required": [
																"offset",
																"name",
																"id"
															],
															"type": "object"
														},
														"type": "array"
													}
												},
												"required": [
													"timezones"
												],
												"type": "object"
											},
											"name": {
												"type": "string"
											},
											"id": {
												"type": "string"
											}
										},
										"required": [
											"country",
											"name",
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"region"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "countryId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/country/{countryId}/time-zones": {
			"get": {
				"operationId": "GetFilterdTimeZones",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"name": {
												"type": "string"
											},
											"id": {
												"type": "string"
											}
										},
										"required": [
											"name",
											"id"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"region"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "countryId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/health-check": {
			"get": {
				"operationId": "HealthCheck",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Simple health check endpoint",
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}